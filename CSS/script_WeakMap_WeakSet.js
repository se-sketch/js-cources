"use strict";

let john = { name: "John" };

let array = [ john ];

john = null; // –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç

console.log(array);

//-----------------------------------------
john = { name: "John" };

let map = new Map();
map.set(john, "...");

john = null; // –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç

// –æ–±—ä–µ–∫—Ç john —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ `Map`,
// –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ map.keys()

console.log(map);

//-----------------------------------------

john = { name: "John" };

let weakMap = new WeakMap();
weakMap.set(john, "...");

john = null; // –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç

// –æ–±—ä–µ–∫—Ç john —É–¥–∞–ª—ë–Ω –∏–∑ –ø–∞–º—è—Ç–∏!

console.log(weakMap);

//-----------------------------------------

let cache = new WeakMap();

// –≤—ã—á–∏—Å–ª—è–µ–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
function process(obj) {
  if (!cache.has(obj)) {
    let result = /* –≤—ã—á–∏—Å–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ */ obj;

    cache.set(obj, result);
  }

  return cache.get(obj);
}

// üìÅ main.js
let obj = {/* –∫–∞–∫–æ–π-—Ç–æ –æ–±—ä–µ–∫—Ç */};

let result1 = process(obj);
let result2 = process(obj);

// ...–ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω:
obj = null;

// –ù–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∏—Ç—å cache.size, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ WeakMap,
// –Ω–æ –æ–Ω —Ä–∞–≤–µ–Ω 0 –∏–ª–∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω 0
// –ö–æ–≥–¥–∞ —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ —É–¥–∞–ª—è–µ—Ç obj, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–µ—à–∞ —Ç–æ–∂–µ —É–¥–∞–ª—è—é—Ç—Å—è

//-----------------------------------------

let visitedSet = new WeakSet();

 john = { name: "John" };
let pete = { name: "Pete" };
let mary = { name: "Mary" };

visitedSet.add(john); // John –∑–∞—Ö–æ–¥–∏–ª –∫ –Ω–∞–º
visitedSet.add(pete); // –ø–æ—Ç–æ–º Pete
visitedSet.add(john); // John —Å–Ω–æ–≤–∞

// visitedSet —Å–µ–π—á–∞—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

// –ø—Ä–æ–≤–µ—Ä–∏–º, –∑–∞—Ö–æ–¥–∏–ª –ª–∏ John?
console.log(visitedSet.has(john)); // true

// –ø—Ä–æ–≤–µ—Ä–∏–º, –∑–∞—Ö–æ–¥–∏–ª–∞ –ª–∏ Mary?
console.log(visitedSet.has(mary)); // false

john = null;

// —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö visitedSet –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

//-----------------------------------------

let messages = [
    {text: "Hello", from: "John"},
    {text: "How goes?", from: "John"},
    {text: "See you soon", from: "Alice"}
];

let readMessages = new WeakSet();

// –î–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã
readMessages.add(messages[0]);
readMessages.add(messages[1]);
// readMessages —Å–æ–¥–µ—Ä–∂–∏—Ç 2 —ç–ª–µ–º–µ–Ω—Ç–∞

// ...–¥–∞–≤–∞–π—Ç–µ —Å–Ω–æ–≤–∞ –ø—Ä–æ—á–∏—Ç–∞–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!
readMessages.add(messages[0]);
// readMessages –¥–æ —Å–∏—Ö –ø–æ—Ä —Å–æ–¥–µ—Ä–∂–∏—Ç 2 —ç–ª–µ–º–µ–Ω—Ç–∞

// –í–æ–ø—Ä–æ—Å: –±—ã–ª–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ message[0] –ø—Ä–æ—á–∏—Ç–∞–Ω–æ?
console.log("Read message 0: " + readMessages.has(messages[0])); // true

messages.shift();
// —Ç–µ–ø–µ—Ä—å readMessages —Å–æ–¥–µ—Ä–∂–∏—Ç 1 —ç–ª–µ–º–µ–Ω—Ç (—Ö–æ—Ç—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –ø–∞–º—è—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–∏—â–µ–Ω–∞ –ø–æ–∑–∂–µ)

//-----------------------------------------

let messages = [
  {text: "Hello", from: "John"},
  {text: "How goes?", from: "John"},
  {text: "See you soon", from: "Alice"}
];

let readMap = new WeakMap();

readMap.set(messages[0], new Date(2017, 1, 1));
// –û–±—ä–µ–∫—Ç Date –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø–æ–∑–¥–Ω–µ–µ

